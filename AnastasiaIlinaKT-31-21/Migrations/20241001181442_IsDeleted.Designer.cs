// <auto-generated />
using System;
using AnastasiaIlinaKT_31_21.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnastasiaIlinaKT_31_21.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20241001181442_IsDeleted")]
    partial class IsDeleted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AcademicGroupDiscipline", b =>
                {
                    b.Property<int>("DisciplinesDisciplineId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupsGroupId")
                        .HasColumnType("integer");

                    b.HasKey("DisciplinesDisciplineId", "GroupsGroupId");

                    b.HasIndex("GroupsGroupId");

                    b.ToTable("AcademicGroupDiscipline");
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.AcademicGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("group_id")
                        .HasComment("Идентификатор записи группы");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GroupId"));

                    b.Property<string>("Chars")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar")
                        .HasColumnName("c_group_characters")
                        .HasComment("Литеры группы");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bool")
                        .HasColumnName("c_group_is_deleted")
                        .HasComment("Статус удаления");

                    b.Property<int>("Number")
                        .HasColumnType("int4")
                        .HasColumnName("c_group_number")
                        .HasComment("Номер группы");

                    b.Property<int>("Year")
                        .HasColumnType("int4")
                        .HasColumnName("c_group_year")
                        .HasComment("Год поступления");

                    b.HasKey("GroupId")
                        .HasName("pk_cd_group_group_id");

                    b.ToTable("cd_group", (string)null);
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор записи дисциплины");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DisciplineId"));

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("c_discipline_name")
                        .HasComment("Название дисциплины");

                    b.HasKey("DisciplineId")
                        .HasName("pk_cd_discipline_discipline_id");

                    b.ToTable("cd_discipline", (string)null);
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.Mark", b =>
                {
                    b.Property<int>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mark_id")
                        .HasComment("Идентификатор записи оценки");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MarkId"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("MarkDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("c_mark_date")
                        .HasComment("Дата оценки");

                    b.Property<int>("MarkValue")
                        .HasColumnType("int4")
                        .HasColumnName("c_mark_value")
                        .HasComment("Оценка");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("MarkId")
                        .HasName("pk_cd_mark_mark_id");

                    b.HasIndex("DisciplineId")
                        .HasDatabaseName("inx_cd_mark_fk_f_discipline_id");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("inx_cd_mark_fk_f_student_id");

                    b.ToTable("cd_mark", (string)null);
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("student_id")
                        .HasComment("Идентификатор записи студента");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudentId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_student_fisrtname")
                        .HasComment("Имя студента");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_student_lastname")
                        .HasComment("Фамилия студента");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_student_middlename")
                        .HasComment("Отчество студента");

                    b.HasKey("StudentId")
                        .HasName("pk_cd_student_student_id");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("inx_cd_student_fk_f_group_id");

                    b.ToTable("cd_student", (string)null);
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("test_id")
                        .HasComment("Идентификатор записи зачета");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TestId"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("integer");

                    b.Property<bool>("Passed")
                        .HasColumnType("bool")
                        .HasColumnName("c_passed")
                        .HasComment("Результат");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TestDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("c_taste_date")
                        .HasComment("Дата зачета");

                    b.HasKey("TestId")
                        .HasName("pk_cd_test_test_id");

                    b.HasIndex("DisciplineId")
                        .HasDatabaseName("inx_cd_test_fk_f_discipline_id");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("inx_cd_test_fk_f_student_id");

                    b.ToTable("cd_test", (string)null);
                });

            modelBuilder.Entity("AcademicGroupDiscipline", b =>
                {
                    b.HasOne("AnastasiaIlinaKT_31_21.Models.Discipline", null)
                        .WithMany()
                        .HasForeignKey("DisciplinesDisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnastasiaIlinaKT_31_21.Models.AcademicGroup", null)
                        .WithMany()
                        .HasForeignKey("GroupsGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.Mark", b =>
                {
                    b.HasOne("AnastasiaIlinaKT_31_21.Models.Discipline", "Discipline")
                        .WithMany("Marks")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_discipline_id");

                    b.HasOne("AnastasiaIlinaKT_31_21.Models.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_student_id");

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.Student", b =>
                {
                    b.HasOne("AnastasiaIlinaKT_31_21.Models.AcademicGroup", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_group_id");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.Test", b =>
                {
                    b.HasOne("AnastasiaIlinaKT_31_21.Models.Discipline", "Discipline")
                        .WithMany("Tests")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_discipline_id");

                    b.HasOne("AnastasiaIlinaKT_31_21.Models.Student", "Student")
                        .WithMany("Tests")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_student_id");

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.AcademicGroup", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.Discipline", b =>
                {
                    b.Navigation("Marks");

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("AnastasiaIlinaKT_31_21.Models.Student", b =>
                {
                    b.Navigation("Marks");

                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
